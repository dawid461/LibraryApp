@model LibApp.WebUI.ViewModels.RentalsViewModel

@{
    ViewBag.Title = "New Rental";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Rental</h2>

<form id="newRental">
    <div id="#response"></div>
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" type="text" data-rule-validCustomer="true" value="" class="form-control form-control-sm" />
        </div>
    </div>

    <div class="form-group">
        <label>Book</label>
        <div class="tt-container">
            <input id="book" name="book" type="text" value="" data-rule-validBooks="true" class="form-control form-control-sm" />
        </div>
    </div>

    <ul id="books" class="flex-column list-group col-lg-4 col-md-4 col-sm-4 mt-2 mb-1 "></ul>

    <button class="btn btn-danger btn-sm" type="submit">Submit</button>
    <a asp-controller="Home" asp-action="Index" class="btn btn-primary btn-sm">
        Back to main page
    </a>
</form>

@section Scripts {
<script>
    $(document).ready(function () {
        var formData = {
            customerId: 0,
            bookIds: []
        };

        var customers = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
           local: @Html.Raw(Json.Serialize(Model.Customers))
        });

        var books = new Bloodhound({
            datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
            queryTokenizer: Bloodhound.tokenizers.whitespace,
            local: @Html.Raw(Json.Serialize(Model.Books))
        });


        $('#customer').typeahead(
            {
                minLength: 3,
                highlight: true
            },
            {
            name: 'customers',
            display: 'name',
            source: customers
            }).on("typeahead:select", function (e, customer) {
                formData.customerId = customer.id;
            });

        $('#book').typeahead(
            {
                minLength: 2,
                highlight: true
            },
            {
                name: 'books',
                display: 'name',
                source: books
            })
            .on("typeahead:select", function (e, book) {
                formData.bookIds.push(book.id);
                $('#book').typeahead("val", "");
                $("#books").append("<li class='list-group-item'>" + book.name + "</li>");
            });

        $.validator.addMethod("validCustomer", function () {
            return formData.customerId && formData.customerId !== 0;
        }, "Proszę wybrać klienta");

        $.validator.addMethod("validBooks", function () {
            return formData.bookIds.length !== 0;
        }, "Proszę wybrać co najmniej jedną książkę do wypożyczenia.");

        var validator = $("#newRental")
            .submit(function(e){
                e.preventDefault()
            })
        .validate({
            submitHandler: function () {
                var postData = JSON.stringify(formData);

                $.ajax({
                    url: "/api/newRentals/",
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    dataType: "html",
                    data: postData
                }).done(function () {
                    bootstrapAlert("Success", "Added a new rental", "success");
                    $("#customer").typeahead("val", "");
                    $("#book").typeahead("val", "");
                    $("#books").empty();
                    formData = {
                        customerId: 0,
                        bookIds: []
                    };
                }).fail(function (error) {
                    console.log(error);
                    bootstrapAlert("Rental faild", error.responseText, "danger", 5000);
                });
                validator.resetForm();
                return false;
            }
        })
    });
</script>
}